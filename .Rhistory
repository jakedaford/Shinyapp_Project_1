sauce
female_subset
class(female_subset)
?subset
subset(HairEyeColor)
subset(HairEyeColor, Hair == 'Black')
subset(HairEyeColor, HairEyeColor$Hair == 'Black')
subset(HairEyeColor, HairEyeColorHair == 'Black')
?HairEyeColor
female_subset = HairEyeColor[,1:2,2]
View(female_subset)
mosaicplot(female_subset)
mosaicplot(female_subset, shade = T)
HairEyeColor
?HairEyeColor
?var.test
var.test(x = female_subset[,1,], y = female_subset[,2,],
alternative = c('two.sided'))
female_subset = HairEyeColor[,1:2,2]
var.test(x = female_subset[,1,], y = female_subset[,2,],
alternative = c('two.sided'))
class(female_subset[,1,])
class(female_subset)
dim(female_subset)
var.test(x = female_subset[,1], y = female_subset[,2],
alternative = c('two.sided'))
shiny::runApp('shinyApps/leaflet_demo')
runApp('shinyApps/shinyDashBoard')
runApp('~/NYCDS-R/shiny_db_demo/shiny_csv')
flights <- fread("./flights14.csv")
setwd("~/NYCDS-R/shiny_db_demo/shiny_csv")
flights <- fread("./flights14.csv")
head(flights)
setwd("~/NYCDS-R")
runApp('shiny_db_demo/shiny_csv')
setwd("~/NYCDS-R/shiny_db_demo/shiny_sqlite")
setwd("~/NYCDS-R")
getwd()
source('~/NYCDS-R/shiny_db_demo/shiny_sqlite/preProc.R')
source('~/NYCDS-R/shiny_db_demo/shiny_sqlite/preProc.R')
source('~/NYCDS-R/shiny_db_demo/shiny_sqlite/preProc.R')
getwd()
## connect to database
conn <- dbConnect(drv = SQLite(),
dbname = dbname)
source('~/NYCDS-R/shiny_db_demo/shiny_sqlite/preProc.R')
chisq.test(female_subset)
shiny::runApp('~/git_proj/Shinyapp_Project_1')
runApp('~/git_proj/Shinyapp_Project_1')
runApp('~/git_proj/Shinyapp_Project_1')
runApp('~/git_proj/Shinyapp_Project_1')
runApp('~/git_proj/Shinyapp_Project_1')
runApp('~/git_proj/Shinyapp_Project_1')
runApp('~/git_proj/Shinyapp_Project_1')
detach("package:bindrcpp", unload=TRUE)
detach("package:data.table", unload=TRUE)
detach("package:datasets", unload=TRUE)
detach("package:dplyr", unload=TRUE)
detach("package:DT", unload=TRUE)
detach("package:ggplot2", unload=TRUE)
detach("package:graphics", unload=TRUE)
detach("package:grDevices", unload=TRUE)
detach("package:methods", unload=TRUE)
detach("package:rgdal", unload=TRUE)
detach("package:shiny", unload=TRUE)
detach("package:shinydashboard", unload=TRUE)
detach("package:sp", unload=TRUE)
detach("package:stats", unload=TRUE)
detach("package:tidyr", unload=TRUE)
detach("package:utils", unload=TRUE)
shiny::runApp('~/git_proj/Shinyapp_Project_1')
runApp('~/git_proj/Shinyapp_Project_1')
detach("package:shiny", unload=TRUE)
detach("package:shinydashboard", unload=TRUE)
detach("package:sp", unload=TRUE)
library(shiny)
library(data.table)
library(dplyr)
library(tidyr)
library(ggplot2)
library(shinydashboard)
library(DT)
library(rgdal)
library(sp)
library(rgdal)
runApp('~/git_proj/Shinyapp_Project_1')
runApp('~/git_proj/Shinyapp_Project_1')
shiny::runApp('~/git_proj/Shinyapp_Project_1')
shiny::runApp('~/git_proj/Shinyapp_Project_1')
collisions_somehours_somedays_by_borough = collisions %>%
filter(borough != "") %>%
filter(weekdays(date) %in% c('Monday', 'Friday', 'Saturday', 'Sunday')) %>%
filter(time_24 < 24 & time_24 > 1)
y = ggplot(collisions_somehours_somedays_by_borough, aes(time_24,
fill = borough,
colour = borough))
y + geom_density(alpha=0.1) + facet_wrap(~ borough, 2)
nyc_sf <- readOGR("./Borough_Boundaries/geo_export_f3ba0d5a-7d6b-4731-a782-16df3f4251b5.shp")
row.names(nyc_sf) <- c("Queens", "Staten Island", "Bronx", "Brooklyn", "Manhattan")
# Plot of all NYC filled by boro
ggplot() +
geom_polygon(data = nyc_sf,
aes(x=long, y=lat, group=group)) +
coord_equal() + geom_point(data = lethal_collisions,
aes(x=longitude, y=latitude), color="red", alpha = .1)
library(ggmap)
install.packages("ggmap")
library(ggthemes)
mapnyc <- data.frame(latitude = c(40.7032815,40.7082398),
longitude = c(-74.0192166, -74.0054436),
logprice = c(120,56))
nyc_base <- ggmap::get_map("New York City", zoom = 14)
ggmap(nyc_base) + geom_point(data=mapnyc, aes(x=longitude, y=latitude), color="red", size=20, alpha=0.5)
nyc_base <- get_map("New York City", zoom = 14)
mapnyc <- data.frame(latitude = c(40.7032815,40.7082398),
longitude = c(-74.0192166, -74.0054436),
logprice = c(120,56))
nyc_base <- get_map("New York City", zoom = 14)
ggmap::
nyc_base <- ggmap::get_map("New York City", zoom = 14)
nyc_base <- ggmap::get_map("New York City", zoom = 1)
ggmap(nyc_base) + geom_point(data=mapnyc, aes(x=longitude, y=latitude), color="red", size=20, alpha=0.5)
library(ggmap)
library(ggthemes)
mapnyc <- data.frame(latitude = c(40.7032815,40.7082398),
longitude = c(-74.0192166, -74.0054436),
logprice = c(120,56))
nyc_base <- ggmap::get_map("New York City", zoom = 1)
nyc_base <- ggmap::get_map("New York City", zoom = 14)
ggmap(nyc_base) + geom_point(data=mapnyc, aes(x=longitude, y=latitude), color="red", size=20, alpha=0.5)
detach("package:ggmap", unload=TRUE)
library("ggmap", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
detach("package:ggmap", unload=TRUE)
remove.packages("ggmap")
install.packages("ggmap")
library(ggmap)
qmap(location = "New York City", zoom = 14)
qmap(location = "New York City", zoom = 11)
qmap(location = "New York City", zoom = 11) + geom_point(data = lethal_collisions,
aes(x=longitude, y=latitude), color="red", alpha = .1)
qmap(location = "New York City", zoom = 10) + geom_point(data = lethal_collisions,
aes(x=longitude, y=latitude), color="red", alpha = .1)
qmap(location = "Brooklyn", zoom = 10) + geom_point(data = lethal_collisions,
aes(x=longitude, y=latitude), color="red", alpha = .1)
qmap(location = "Manhatten", zoom = 10) + geom_point(data = lethal_collisions,
aes(x=longitude, y=latitude), color="red", alpha = .1)
qmap(location = "Wisconsin", zoom = 10) + geom_point(data = lethal_collisions,
aes(x=longitude, y=latitude), color="red", alpha = .1)
qmap(location = "New York State", zoom = 10) + geom_point(data = lethal_collisions,
aes(x=longitude, y=latitude), color="red", alpha = .1)
qmap(location = "Staten Island", zoom = 10) + geom_point(data = lethal_collisions,
aes(x=longitude, y=latitude), color="red", alpha = .1)
qmap(location = "Staten Island", zoom = 10) + geom_point(data = lethal_collisions,
aes(x=longitude, y=latitude), color="red", alpha = .1)
qmap(location = "Prospect Part", zoom = 10) + geom_point(data = lethal_collisions,
aes(x=longitude, y=latitude), color="red", alpha = .1)
remove.packages("ggmap")
library("leaflet")
library(leaflet)
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=174.768, lat=-36.852,
popup="The birthplace of R")
m
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=lethal_collisions$longitude, lat=lethal_collisions$latitude,
popup="A fatal accident")
m
?addMarkers
?addCircles
library(leaflet)
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=lethal_collisions$longitude, lat=lethal_collisions$latitude,
popup="A fatal accident")
m
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=lethal_collisions$longitude, lat=lethal_collisions$latitude,
popup=lethal_collisions$number_of_persons_killed)
m
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=lethal_collisions$longitude, lat=lethal_collisions$latitude,
popup=paste(lethal_collisions$number_of_persons_killed,
"people died here on "))
m
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=lethal_collisions$longitude, lat=lethal_collisions$latitude,
popup=paste(lethal_collisions$number_of_persons_killed,
"people died here on ", "sauce"))
m
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=lethal_collisions$longitude, lat=lethal_collisions$latitude,
popup=paste(number_of_persons_killed,
"people died here on ",))
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=lethal_collisions$longitude, lat=lethal_collisions$latitude,
popup=paste(lethal_collisions$number_of_persons_killed,
"people died here on ",))
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=lethal_collisions$longitude, lat=lethal_collisions$latitude,
popup=paste(lethal_collisions$number_of_persons_killed,
"people died here on "))
m
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=lethal_collisions$longitude, lat=lethal_collisions$latitude,
popup=paste(lethal_collisions$number_of_persons_killed,
ifelse(lethal_collisions$number_of_persons_killed = 1,
" person died here on ",
"people died here on ")))
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=lethal_collisions$longitude, lat=lethal_collisions$latitude,
popup=paste(lethal_collisions$number_of_persons_killed,
ifelse(lethal_collisions$number_of_persons_killed = 1,
" person died here on ",
"people died here on ")))
2+3 = 5
2+3 == 5
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=lethal_collisions$longitude, lat=lethal_collisions$latitude,
popup=paste(lethal_collisions$number_of_persons_killed,
ifelse(lethal_collisions$number_of_persons_killed == 1,
" person died here on ",
"people died here on ")))
m
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=lethal_collisions$longitude, lat=lethal_collisions$latitude,
popup=paste(lethal_collisions$number_of_persons_killed,
ifelse(lethal_collisions$number_of_persons_killed == 1,
" person died here on ",
"people died here on "),
lethal_collisions$date))
m
?leaflet
m <- leaflet() %>%
addTiles() %>%
setView(40.724451, -73.968933, zoom = 17) %>%
# Add default OpenStreetMap map tiles
addMarkers(lng=lethal_collisions$longitude, lat=lethal_collisions$latitude,
popup=paste(lethal_collisions$number_of_persons_killed,
ifelse(lethal_collisions$number_of_persons_killed == 1,
" person died here on ",
"people died here on "),
lethal_collisions$date))
m
m <- leaflet() %>%
addTiles() %>%
setView(40.724451, -73.968933, zoom = 1) %>%
# Add default OpenStreetMap map tiles
addMarkers(lng=lethal_collisions$longitude, lat=lethal_collisions$latitude,
popup=paste(lethal_collisions$number_of_persons_killed,
ifelse(lethal_collisions$number_of_persons_killed == 1,
" person died here on ",
"people died here on "),
lethal_collisions$date))
m
m <- leaflet() %>%
addTiles() %>%
setView(40.724451, -73.968933, zoom = 5) %>%
# Add default OpenStreetMap map tiles
addMarkers(lng=lethal_collisions$longitude, lat=lethal_collisions$latitude,
popup=paste(lethal_collisions$number_of_persons_killed,
ifelse(lethal_collisions$number_of_persons_killed == 1,
" person died here on ",
"people died here on "),
lethal_collisions$date))
m
lethal_collisions$latitude[0]
lethal_collisions$latitude[0][0]
lethal_collisions$latitude[[0]]
head(lethal_collisions)
m <- leaflet() %>%
addTiles() %>%
setView(40.72, -73.96, zoom = 5) %>%
# Add default OpenStreetMap map tiles
addMarkers(lng=lethal_collisions$longitude, lat=lethal_collisions$latitude,
popup=paste(lethal_collisions$number_of_persons_killed,
ifelse(lethal_collisions$number_of_persons_killed == 1,
" person died here on ",
"people died here on "),
lethal_collisions$date))
m
m <- leaflet() %>%
addTiles() %>%
setView(40.72, -73.96, zoom = .5) %>%
# Add default OpenStreetMap map tiles
addMarkers(lng=lethal_collisions$longitude, lat=lethal_collisions$latitude,
popup=paste(lethal_collisions$number_of_persons_killed,
ifelse(lethal_collisions$number_of_persons_killed == 1,
" person died here on ",
"people died here on "),
lethal_collisions$date))
m
m <- leaflet() %>%
addTiles() %>%
setView(40.72, -73.96, zoom = 50) %>%
# Add default OpenStreetMap map tiles
addMarkers(lng=lethal_collisions$longitude, lat=lethal_collisions$latitude,
popup=paste(lethal_collisions$number_of_persons_killed,
ifelse(lethal_collisions$number_of_persons_killed == 1,
" person died here on ",
"people died here on "),
lethal_collisions$date))
m
m <- leaflet() %>%
addTiles() %>%
setView(40.72, -73.96, zoom = 16) %>%
# Add default OpenStreetMap map tiles
addMarkers(lng=lethal_collisions$longitude, lat=lethal_collisions$latitude,
popup=paste(lethal_collisions$number_of_persons_killed,
ifelse(lethal_collisions$number_of_persons_killed == 1,
" person died here on ",
"people died here on "),
lethal_collisions$date))
m
m <- leaflet() %>%
addTiles() %>%
setView(40.72, -73.96, zoom = 8) %>%
# Add default OpenStreetMap map tiles
addMarkers(lng=lethal_collisions$longitude, lat=lethal_collisions$latitude,
popup=paste(lethal_collisions$number_of_persons_killed,
ifelse(lethal_collisions$number_of_persons_killed == 1,
" person died here on ",
"people died here on "),
lethal_collisions$date))
m
m <- leaflet() %>%
addTiles() %>%
setView(40.72, -73.96, zoom = 3) %>%
# Add default OpenStreetMap map tiles
addMarkers(lng=lethal_collisions$longitude, lat=lethal_collisions$latitude,
popup=paste(lethal_collisions$number_of_persons_killed,
ifelse(lethal_collisions$number_of_persons_killed == 1,
" person died here on ",
"people died here on "),
lethal_collisions$date))
m
head(lethal_collisions)
m <- leaflet() %>%
addTiles() %>%
setView(-73.96, 40.72, zoom = 3) %>%
# Add default OpenStreetMap map tiles
addMarkers(lng=lethal_collisions$longitude, lat=lethal_collisions$latitude,
popup=paste(lethal_collisions$number_of_persons_killed,
ifelse(lethal_collisions$number_of_persons_killed == 1,
" person died here on ",
"people died here on "),
lethal_collisions$date))
m
m <- leaflet() %>%
addTiles() %>%
setView(-73.96, 40.72, zoom = 13) %>%
# Add default OpenStreetMap map tiles
addMarkers(lng=lethal_collisions$longitude, lat=lethal_collisions$latitude,
popup=paste(lethal_collisions$number_of_persons_killed,
ifelse(lethal_collisions$number_of_persons_killed == 1,
" person died here on ",
"people died here on "),
lethal_collisions$date))
m
m <- leaflet() %>%
addTiles() %>%
setView(-73.96, 40.72, zoom = 11) %>%
# Add default OpenStreetMap map tiles
addMarkers(lng=lethal_collisions$longitude, lat=lethal_collisions$latitude,
popup=paste(lethal_collisions$number_of_persons_killed,
ifelse(lethal_collisions$number_of_persons_killed == 1,
" person died here on ",
"people died here on "),
lethal_collisions$date))
m
m <- leaflet() %>%
addTiles() %>%
setView(-73.96, 40.72, zoom = 12) %>%
# Add default OpenStreetMap map tiles
addMarkers(lng=lethal_collisions$longitude, lat=lethal_collisions$latitude,
popup=paste(lethal_collisions$number_of_persons_killed,
ifelse(lethal_collisions$number_of_persons_killed == 1,
" person died here on ",
"people died here on "),
lethal_collisions$date))
m
m <- leaflet() %>%
#addTiles() %>%
setView(-73.96, 40.72, zoom = 12) %>%
# Add default OpenStreetMap map tiles
addMarkers(lng=lethal_collisions$longitude, lat=lethal_collisions$latitude,
popup=paste(lethal_collisions$number_of_persons_killed,
ifelse(lethal_collisions$number_of_persons_killed == 1,
" person died here on ",
"people died here on "),
lethal_collisions$date))
m
m <- leaflet() %>%
addTiles() %>%
setView(-73.96, 40.72, zoom = 12) %>%
# Add default OpenStreetMap map tiles
addMarkers(lng=lethal_collisions$longitude, lat=lethal_collisions$latitude,
popup=paste(lethal_collisions$number_of_persons_killed,
ifelse(lethal_collisions$number_of_persons_killed == 1,
" person died here on ",
"people died here on "),
lethal_collisions$date))
m
runApp('~/git_proj/Shinyapp_Project_1')
ggplot() +
geom_polygon(data = nyc_sf,
aes(x=long, y=lat, group=group)) +
coord_equal() + geom_point(data = lethal_collisions_subset(),
aes(x=longitude, y=latitude), color="red", alpha = .2) +
ggtitle("Traffic Fatalities in NYC") +
xlab("Latitude") + ylab("Longitude") +
theme(plot.title = element_text(hjust = 0.5))
m
runApp('~/git_proj/Shinyapp_Project_1')
m
runApp('~/git_proj/Shinyapp_Project_1')
runApp('~/git_proj/Shinyapp_Project_1')
unique(year(lethal_collisions$date))
runApp('~/git_proj/Shinyapp_Project_1')
runApp('~/git_proj/Shinyapp_Project_1')
runApp('~/git_proj/Shinyapp_Project_1')
runApp('~/git_proj/Shinyapp_Project_1')
runApp('~/git_proj/Shinyapp_Project_1')
runApp('~/git_proj/Shinyapp_Project_1')
runApp('~/git_proj/Shinyapp_Project_1')
runApp('~/git_proj/Shinyapp_Project_1')
runApp('~/git_proj/Shinyapp_Project_1')
z = ggplot(lethal_collisions)
collisions_somehours_somedays = collisions %>%
filter(weekdays(collisions$date) %in% c('Saturday', 'Sunday')) %>%
filter(time_24 < 24 & time_24 > 6)
w = ggplot(collisions_somehours_somedays, aes(time_24))
w + geom_density()
w + geom_density() + scale_fill_discrete(name="Experimental\nCondition",
breaks=c("ctrl", "trt1", "trt2"),
labels=c("Control", "Treatment 1", "Treatment 2"))
collisions_somehours_somedays = collisions %>%
filter(weekdays(collisions$date) %in% c('Monday', 'Friday', 'Saturday', 'Sunday')) %>%
filter(time_24 < 24 & time_24 > 1)
v = ggplot(collisions_somehours_somedays, aes(time_24,
fill = weekdays(date),
colour = weekdays(date)))
v + geom_density(alpha=0.1)
v + geom_density(alpha=0.1) + scale_fill_discrete(name="Experimental\nCondition",
breaks=c("ctrl", "trt1", "trt2", 'sauce2'),
labels=c("Control", "Treatment 1", "Treatment 2", 'sauce'))
v + geom_density(alpha=0.1) + scale_fill_discrete(name="Experimental Condition",
breaks=c("ctrl", "trt1", "trt2", 'sauce2'),
labels=c("Control", "Treatment 1", "Treatment 2", 'sauce'))
v + geom_density(alpha=0.1) + scale_shape_discrete(name  ="Payer",
breaks=c("Female", "Male"),
labels=c("Woman", "Man"))
v + geom_density(alpha=0.1) + scale_color_discrete(name  ="Payer",
breaks=c('Monday', 'Friday', 'Saturday', 'Sunday'),
labels=c('Monday', 'Friday', 'Saturday', 'Sunday'))
v + geom_density(alpha=0.1) +  theme(legend.title=element_blank())
v + geom_density(alpha=0.1) +  theme(legend.title='Weekday)
v + geom_density(alpha=0.1) +  theme(legend.title='Weekday')
v + geom_density(alpha=0.1) +  theme(legend.title='Weekday')
v + geom_density(alpha=0.1) +  theme(legend.title=element_text(Weekday))
v + geom_density(alpha=0.1) +  theme(legend.title=element_text('Weekday'))
v + geom_density(alpha=0.1) +  labs(aesthetic='custom text')
theme(legend.title=element_text('Weekday'))
v + geom_density(alpha=0.1) +  theme(legend.title=element_text('Weekday'))
v + geom_density(alpha=0.1)
v = ggplot(collisions_somehours_somedays, aes(time_24,
fill = weekdays(date),
colour = weekdays(date)))
v + geom_density(alpha=0.1)
v + geom_density(alpha=0.1) + scale_linetype_discrete(name = "Fancy Title")
v = ggplot(collisions_somehours_somedays, aes(time_24,
fill = weekdays(date),
colour = weekdays(date)))
v + geom_density(alpha=0.1) + scale_linetype_discrete(name = "Fancy Title")
v = ggplot(collisions_somehours_somedays, aes(time_24,
fill = weekdays(date),
colour = weekdays(date)))
v + geom_density(alpha=0.1) + labs(linetype='custom title')
v = ggplot(collisions_somehours_somedays, aes(time_24,
fill = weekdays(date),
colour = weekdays(date)))
v + geom_density(alpha=0.1) + labs(aesthetic='custom text')
?labs
v = ggplot(collisions_somehours_somedays, aes(time_24,
fill = weekdays(date),
colour = weekdays(date)))
v + geom_density(alpha=0.1) + labs(fill = "Dose (mg)")
v + geom_density(alpha=0.1) + labs(fill = "Dose (mg)", color = "Dose (mg)")
v + geom_density(alpha=0.1) + labs(fill = "Day of Wee", color = "Day of Week")
v + geom_density(alpha=0.1) + labs(fill = "Day of Week", color = "Day of Week")
runApp('~/git_proj/Shinyapp_Project_1')
runApp('~/git_proj/Shinyapp_Project_1')
runApp('~/git_proj/Shinyapp_Project_1')
runApp('~/git_proj/Shinyapp_Project_1')
runApp('~/git_proj/Shinyapp_Project_1')
runApp('~/git_proj/Shinyapp_Project_1')
getwd()
setwd("~/git_proj/Shinyapp_Project_1")
getwd()
runApp()
runApp()
